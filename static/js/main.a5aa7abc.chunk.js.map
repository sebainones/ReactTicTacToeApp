{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","state","squares","Array","fill","xIsNext","i","this","slice","calculateWinner","setState","handleClick","status","winner","renderSquare","React","Component","Game","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"wNAIC,SAASA,EAAOC,GACf,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACGF,EAAMG,Q,IAKLC,E,kDACJ,WAAYJ,GAAO,IAAD,8BAChB,cAAMA,IACDK,MAAQ,CACXC,QAAUC,MAAM,GAAGC,KAAK,MACxBC,SAAS,GAJK,E,+CAQlB,SAAYC,GACV,IAAMJ,EAAUK,KAAKN,MAAMC,QAAQM,QAC/BC,EAAgBP,IAAYA,EAAQI,KAGxCJ,EAAQI,GAAKC,KAAKN,MAAMI,QAAU,IAAM,IACxCE,KAAKG,SAAS,CACZR,QAASA,EACTG,SAAUE,KAAKN,MAAMI,a,0BAIzB,SAAaC,GAAI,IAAD,OACd,OACA,cAACX,EAAD,CACGI,MAAQQ,KAAKN,MAAMC,QAAQI,GAC3BR,QAAS,kBAAI,EAAKa,YAAYL,Q,oBAGnC,WACE,IACIM,EADEC,EAASJ,EAAgBF,KAAKN,MAAMC,SAQ1C,OALEU,EADEC,EACO,WAAaA,EAEb,mBAAqBN,KAAKN,MAAMI,QAAU,IAAM,KAIzD,gCACE,qBAAKR,UAAU,SAAf,SAAyBe,IACzB,sBAAKf,UAAU,YAAf,UACGU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAGrB,sBAAKjB,UAAU,YAAf,UACGU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,MAErB,sBAAKjB,UAAU,YAAf,UACGU,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,a,GAtDTC,IAAMC,WA6DpBC,E,4JACJ,WACE,OACE,sBAAKpB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,MAEF,sBAAKH,UAAU,YAAf,UACE,wBACA,iC,GATSkB,IAAMC,WAuBzB,SAASP,EAAgBP,GAWvB,IAVA,IAAMgB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAZ,EAAI,EAAGA,EAAIY,EAAMC,OAAQb,IAAK,CACrC,kBAAkBY,EAAMZ,GAAxB,GAAOc,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIpB,EAAQkB,IAAMlB,EAAQkB,KAAOlB,EAAQmB,IAAMnB,EAAQkB,KAAOlB,EAAQoB,GACpE,OAAOpB,EAAQkB,GAGnB,OAAO,KAtBTG,IAASC,OACP,cAACP,EAAD,IACAQ,SAASC,eAAe,W","file":"static/js/main.a5aa7abc.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n function Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n  \n  class Board extends React.Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        squares : Array(9).fill(null),\n        xIsNext: true,\n      };\n    }\n\n    handleClick(i) {\n      const squares = this.state.squares.slice();\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        squares: squares,\n        xIsNext: !this.state.xIsNext,\n    });\n  }\n\n    renderSquare(i) {\n      return (\n      <Square\n         value ={this.state.squares[i]}\n         onClick={()=>this.handleClick(i)} />);\n    }\n  \n    render() {\n      const winner = calculateWinner(this.state.squares);\n      let status;\n      if (winner) {\n        status = 'Winner: ' + winner;\n      } else {\n        status = 'Nexxxt player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n  \n      return (\n        <div>\n          <div className=\"status\">{status}</div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n            \n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}  \n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}            \n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    render() {\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board />\n          </div>\n          <div className=\"game-info\">\n            <div>{/* status */}</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  \n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }"],"sourceRoot":""}